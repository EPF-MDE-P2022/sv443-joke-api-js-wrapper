{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { requestOptions } from \"./data-types\";\n\nconst API_HOME = \"https://sv443.net/jokeapi/v2/joke/\";\n// TK Make it dynamic\nconst MAX_ID_NUMBER = 291;\n\nfunction validateReqOptions(options: requestOptions) {\n    // atleast one has to be true\n    if (!(options.jokeType?.single || options.jokeType?.twopart)) {\n        throw \"in `jokeType`, `single` or `twopart` has to be true. Atleast one.\";\n    }\n\n    if (Math.min(options.idRange?.from, options.idRange?.to) < 0) {\n        throw \"`idRange` values must be a non-negative number\";\n    }\n    if (options.idRange?.from > options.idRange?.to) {\n        throw \"in `idRange`, `from` value must be smaller `to` value\";\n    }\n\n    if (options.amount < 1) {\n        throw \"`amount` can't be less than 1\";\n    }\n\n    return true;\n}\n\nfunction getJokes(options: requestOptions) {\n    if (options == undefined) {\n        throw \"options has to be given\";\n    }\n\n    let apiReqUrl = API_HOME;\n\n    // do validation\n    if (validateReqOptions(options)) {\n        // query it\n        return fetch(apiReqUrl);\n    }\n}\n\n// @ts-ignore\nmodule.exports = {\n    getJokes,\n};\n"],
  "mappings": ";;;;;;;;;;AAAA,MAAA;AAEA,qBAAiB;AAIjB;AAEI,UAAI,CAAE,SAAQ,UAAU,UAAU,QAAQ,UAAU;AAChD,cAAM;AAAA;AAGV,UAAI,KAAK,IAAI,QAAQ,SAAS,MAAM,QAAQ,SAAS,MAAM;AACvD,cAAM;AAAA;AAEV,UAAI,QAAQ,SAAS,OAAO,QAAQ,SAAS;AACzC,cAAM;AAAA;AAGV,UAAI,QAAQ,SAAS;AACjB,cAAM;AAAA;AAGV,aAAO;AAAA;AAGX;AACI,UAAI,WAAW;AACX,cAAM;AAAA;AAGV,sBAAgB;AAGhB,UAAI,mBAAmB;AAEnB,eAAO,MAAM;AAAA;AAAA;AAKrB,WAAO,UAAU;AAAA,MACb;AAAA;AAAA;",
  "names": []
}
